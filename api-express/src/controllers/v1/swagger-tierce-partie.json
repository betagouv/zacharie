{
  "openapi": "3.0.0",
  "info": {
    "title": "API Zacharie v1 - Accès Tiers",
    "description": "API REST pour l'accès aux données utilisateur avec consentement. Utilisez cette API si vous développez une application qui doit accéder aux données Zacharie au nom de vos utilisateurs.",
    "version": "1.0.0",
    "contact": {
      "url": "https://zacharie.beta.gouv.fr/contact"
    }
  },
  "servers": [
    {
      "url": "/v1",
      "description": "Chemin de base de l'API v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Authentification par clé API. Utilisez 'Bearer VOTRE_CLE_API'"
      }
    },
    "schemas": {
      "ApprovalRequestResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "description": "Indique si la requête s'est bien déroulée"
          },
          "data": {
            "type": "object",
            "properties": {
              "approvalStatus": {
                "type": "string",
                "enum": ["PENDING", "APPROVED", "REJECTED"],
                "description": "Statut de la demande d'approbation"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message informatif"
          }
        }
      },
      "FeiResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "description": "Indique si la requête s'est bien déroulée"
          },
          "data": {
            "type": "object",
            "properties": {
              "feis": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Fei"
                },
                "description": "Liste des fiches d'examen initial"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message informatif"
          }
        }
      },
      "CarcasseResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "description": "Indique si la requête s'est bien déroulée"
          },
          "data": {
            "type": "object",
            "properties": {
              "carcasse": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Carcasse"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Données de la carcasse ou null si non trouvée"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message informatif"
          }
        }
      },
      "CarcassesResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "description": "Indique si la requête s'est bien déroulée"
          },
          "data": {
            "type": "object",
            "properties": {
              "carcasses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Carcasse"
                },
                "description": "Liste des carcasses"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message informatif"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "example": false,
            "description": "Toujours false en cas d'erreur"
          },
          "error": {
            "type": "string",
            "description": "Message d'erreur"
          },
          "message": {
            "type": "string",
            "description": "Message informatif additionnel"
          }
        }
      },
      "Fei": {
        "type": "object",
        "description": "Données complètes d'une fiche d'examen initial accessible avec le consentement de l'utilisateur"
      },
      "Carcasse": {
        "type": "object",
        "description": "Données complètes d'une carcasse accessible avec le consentement de l'utilisateur"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/approval-request/user": {
      "post": {
        "summary": "Demander l'approbation d'un utilisateur",
        "description": "Permet à une application tierce de demander l'approbation d'un utilisateur pour accéder à ses données. L'utilisateur recevra une notification et pourra approuver ou rejeter la demande.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "utilisateur@example.com",
                    "description": "Email de l'utilisateur dont vous voulez demander l'approbation"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succès - Demande d'approbation envoyée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erreur de paramètres - Format d'email invalide ou utilisateur non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit - Clé API invalide ou non autorisée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["Approbations - Accès Tiers"]
      }
    },
    "/approval-request/entite": {
      "post": {
        "summary": "Demander l'approbation d'une entité",
        "description": "Permet à une application tierce de demander l'approbation d'une entité pour accéder à ses données. L'entité recevra une notification et pourra approuver ou rejeter la demande.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siret": {
                    "type": "string",
                    "pattern": "^\\d{14}$",
                    "example": "12345678901234",
                    "description": "Numéro SIRET de l'entité (14 chiffres)"
                  }
                },
                "required": ["siret"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succès - Demande d'approbation envoyée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erreur de paramètres - Format de SIRET invalide ou entité non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit - Clé API invalide ou non autorisée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["Approbations - Accès Tiers"]
      }
    },
    "/fei/user": {
      "get": {
        "summary": "Récupérer les FEI d'un utilisateur",
        "description": "Récupère toutes les fiches d'examen initial d'un utilisateur dans une plage de dates donnée (nécessite l'email de l'utilisateur et son consentement préalable). Cette route permet aux applications tierces d'accéder aux données d'un utilisateur qui a donné son accord.",
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
              "example": "2025-09-17"
            },
            "description": "Date de début (format: AAAA-MM-JJ)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
              "example": "2025-09-20"
            },
            "description": "Date de fin (format: AAAA-MM-JJ)"
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "example": "utilisateur@example.com"
            },
            "description": "Email de l'utilisateur dont vous voulez accéder aux données (consentement requis)"
          }
        ],
        "responses": {
          "200": {
            "description": "Succès - Liste des FEI récupérées",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erreur de paramètres - Format de date invalide, paramètres manquants ou email invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit - Clé API invalide, utilisateur non autorisé ou pas de consentement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["FEI - Accès Tiers"]
      }
    },
    "/carcasse/user/{date_mise_a_mort}/{numero_bracelet}": {
      "get": {
        "summary": "Récupérer une carcasse pour un utilisateur",
        "description": "Récupère une carcasse spécifique au nom d'un utilisateur (nécessite l'email de l'utilisateur et son consentement préalable). Cette route permet aux applications tierces d'accéder aux données d'un utilisateur qui a donné son accord.",
        "parameters": [
          {
            "name": "date_mise_a_mort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
              "example": "2025-09-17"
            },
            "description": "Date de mise à mort (format: AAAA-MM-JJ)"
          },
          {
            "name": "numero_bracelet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "FR123456789"
            },
            "description": "Numéro de bracelet de la carcasse"
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "example": "utilisateur@example.com"
            },
            "description": "Email de l'utilisateur dont vous voulez accéder aux données (consentement requis)"
          }
        ],
        "responses": {
          "200": {
            "description": "Succès - Carcasse trouvée et accessible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarcasseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erreur de paramètres - Format invalide ou email manquant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit - Clé API invalide, utilisateur non autorisé ou pas de consentement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Carcasse non trouvée ou utilisateur n'a pas accès à cette carcasse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["Carcasses - Accès Tiers"]
      }
    },
    "/carcasse/user": {
      "get": {
        "summary": "Récupérer les carcasses d'un utilisateur",
        "description": "Récupère toutes les carcasses d'un utilisateur dans une plage de dates donnée (nécessite l'email de l'utilisateur et son consentement préalable). Cette route permet aux applications tierces d'accéder aux données d'un utilisateur qui a donné son accord.",
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
              "example": "2025-09-17"
            },
            "description": "Date de début (format: AAAA-MM-JJ)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
              "example": "2025-09-20"
            },
            "description": "Date de fin (format: AAAA-MM-JJ)"
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "example": "utilisateur@example.com"
            },
            "description": "Email de l'utilisateur dont vous voulez accéder aux données (consentement requis)"
          }
        ],
        "responses": {
          "200": {
            "description": "Succès - Liste des carcasses récupérées",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarcassesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erreur de paramètres - Format de date invalide, paramètres manquants ou email invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit - Clé API invalide, utilisateur non autorisé ou pas de consentement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["Carcasses - Accès Tiers"]
      }
    }
  }
}
